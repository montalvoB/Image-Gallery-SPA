### Get all images
# This is a comment
GET http://localhost:3000/api/images

### A second example.  Each request must be delimited by a triple hash
POST http://localhost:3000/api/test
Content-Type: application/json # Content-Type header is a must if you're sending JSON
# Request body separated from headers by newline

{ "a": 1, "b": 2 }

### Query parameter
GET http://localhost:3000/api/images?name=cat

### Query parameter and a header
PUT http://localhost:3000/api/images/68393fdfbf10bf7f49003796/name
Content-Type: application/json

{
  "name": "Chickens on a farm"
}

### Invalid ID example
PUT http://localhost:3000/api/images/invalid-id/name
Content-Type: application/json

{
  "name": "New Name"
}

### Bad request example
PUT http://localhost:3000/api/images/647fcbd8a2d18c07a4dbd999/name
Content-Type: application/json

{
  "wrongField": "Oops"
}

### Long request example
PUT http://localhost:3000/api/images/647fcbd8a2d18c07a4dbd999/name
Content-Type: application/json

{
  "name": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
}

### New user registration
POST http://localhost:3000/auth/register
Content-Type: application/json

{ "username": "newuser", "password": "password" }


### Register user successfully
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "username": "testuser1",
  "password": "password"
}

### Register with missing fields
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "username": "testuser2"
}

### Register with existing user
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "username": "chunkylover23",
  "password": "password"
}



### Successful login
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "username": "chunkylover23",
  "password": "password"
}

### Login with incorrect password
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "username": "testuser1",
  "password": "wrongpassword"
}

### Login with non-existent user
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "username": "nonexistent",
  "password": "password"
}

### Login with missing password
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "username": "bob"
}

### Missing Auth Token
GET http://localhost:3000/api/images

### Successful image rename
PUT http://localhost:3000/api/images/68393fdfbf10bf7f49003792/name
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNodW5reWxvdmVyMjMiLCJpYXQiOjE3NDkzMjg4ODAsImV4cCI6MTc0OTQxNTI4MH0.nY5xkSK0YHTBYDlQeWZcYit3kkTjkemjpNnUcbYpgR4
Content-Type: application/json

{
  "name": "Fluffy Sheep"
}


